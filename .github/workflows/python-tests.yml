name: Python Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest numpy scipy

    - name: Setup fine
      run: |
        sed -i '1,6d' lab5/bandc.py
        cat > temp_code.py << 'EOF'
          import math
          import numpy as np
          from collections import deque
          from scipy.optimize import linprog
          from enum import Enum
          class Simplex:
            def __init__(self, A, b, c, bounds=None):
                self.A = A
                self.b = b
                self.c = c
                self.bounds = bounds

            def solve(self):
                n = len(self.c)
                if self.bounds is None:
                    bounds = [(0, 1)] * n
                else:
                    bounds = self.bounds

                if not self.A:
                    A_ub = None
                    b_ub = None
                else:
                    A_ub = self.A
                    b_ub = self.b

                try:
                    res = linprog(
                        c=self.c,
                        A_ub=A_ub,
                        b_ub=b_ub,
                        bounds=bounds,
                        method="highs"
                    )

                    if res.success:
                        return res.fun, res.x.tolist()
                    else:
                        return np.inf, None
                except:
                    return np.inf, None

          EOF
          
          cat lab5/bandc.py >> temp_code.py
          
          mv temp_code.py lab5/bandc.py

    - name: Run test
      run: |
        pytest -v
